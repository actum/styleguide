body{margin:0;background:#7fffd4}.kss_u-container{max-width:1440px;margin:0 auto}.kss_main{height:calc(100vh - 42px)}.kss_content{display:block;width:100%;height:100%;margin:42px auto 0;border:0;transition:width .3s ease-out}.kss_iframe{background:#fff}.kss_section{padding-top:30px}.kss_text-container{max-width:800px;min-height:calc(100vh - 42px);margin:0 auto}.kss_example{margin-bottom:20px}.kss_modifier__description,.kss_modifier__name{display:inline-block}.kss_markup{margin:0 15px}.kss_markup__btn{padding:5px 15px;border:0;background:#f5f2f0;font-size:14px;transition:color .2s ease-out}.kss_markup__btn:hover{color:#000}.kss_markup__btn:focus{outline:0}.kss_markup__wrapper{height:0;overflow:hidden;font-size:14px;transition:height .3s ease-out}.kss_markup__pre{margin-top:0!important}@media (min-width:1024px){.kss_markup{margin:0 50px}}.kss_sg-color{padding:10px;text-align:center}.kss_sg-color__name{padding:5px 10px;border-radius:10px;background:rgba(0,0,0,.5);color:hsla(0,0%,100%,.5)}.kss_u-sg-style{all:initial}.kss_u-sg-style *{all:unset}.kss_u-sg-style,.kss_u-sg-style button{font-family:Consolas,Helvetica Neue,Helvetica,Arial,sans-serif}.kss_u-sg-style,.kss_u-sg-style a,.kss_u-sg-style a:hover{color:#444}.kss_u-sg-style button:focus{outline:0}.kss_u-sg-style h1{font-size:48px}.kss_u-sg-style h2{font-size:32px}.kss_u-sg-style h3{font-size:24px}.kss_u-sg-style .kss_description,.kss_u-sg-style .kss_markup,.kss_u-sg-style .kss_modifier,.kss_u-sg-style .kss_title{margin:0 15px}@media (min-width:1024px){.kss_u-sg-style .kss_description,.kss_u-sg-style .kss_markup,.kss_u-sg-style .kss_modifier,.kss_u-sg-style .kss_title{margin:0 50px}}.kss_u-sg-style .kss_title{margin-bottom:5px;line-height:1}.kss_u-sg-style .kss_title__permalink{position:relative}.kss_u-sg-style .kss_title__permalink:before{content:'$';position:absolute;left:-10px;display:block;width:10px;font-size:16px;color:#888;opacity:0;transform:translate(-5px);transition:.2s ease-out}.kss_u-sg-style .kss_title__permalink:hover{text-decoration:none}.kss_u-sg-style .kss_title__permalink:hover:before{opacity:1;transform:translate(0)}.kss_u-sg-style .kss_title__ref{display:inline-block;font-size:16px;color:#888}.kss_u-sg-style .kss_description{margin-bottom:10px}.kss_u-sg-style .kss_header{position:fixed;top:0;width:calc(100% - 30px);padding:0 15px;background:#333;box-shadow:0 0 6px #444}.kss_u-sg-style .kss_header__container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;max-width:1440px;margin:0 auto}.kss_u-sg-style .kss_header__title{display:inline-block;line-height:42px;margin:0;font-size:18px}.kss_u-sg-style .kss_header__title-link{color:#7fffd4;text-decoration:none}.kss_u-sg-style .kss_header__item{display:inline-block}.kss_u-sg-style .kss_header__btn,.kss_u-sg-style .kss_header__link{padding:13px 5px;border:0;background:none;color:#ccc;font-size:14px;cursor:pointer;opacity:.7;transition:opacity .25s}.kss_u-sg-style .kss_header__btn:hover,.kss_u-sg-style .kss_header__link:hover{opacity:1;color:#ccc}.kss_u-sg-style .kss_header__link{line-height:42px;text-decoration:none}.kss_u-sg-style .kss_header__btn.is-active{color:#fff;opacity:1}.kss_u-sg-style .kss_nav{display:inline-block;margin:0;padding-left:0;list-style:none}.kss_u-sg-style .kss_nav__item{position:relative;display:inline-block}.kss_u-sg-style .kss_nav__item:hover .kss_nav__submenu{visibility:visible;opacity:1}.kss_u-sg-style .kss_nav__submenu{position:absolute;top:42px;left:-10px;background:#333;border-bottom:1px solid #000;box-shadow:1px 1px 6px -1px #444;visibility:hidden;transition:opacity .25s ease-in;opacity:0}.kss_u-sg-style .kss_nav__submenu-item,.kss_u-sg-style .kss_nav__submenu-link{display:block}.kss_u-sg-style .kss_nav__submenu-link{padding:8px 16px 10px;line-height:1;white-space:nowrap}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
